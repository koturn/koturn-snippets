snippet echoerr
  echo >&2 ${0}

snippet echoline
  echo "\
  ${0}
  "

snippet fn
  ${1:#:name}() {
    ${0}
  }

snippet trap-once
  trap '${1:#:action}; trap $2' ${2:SIGHUP SIGINT SIGTERM}
  ${0}
  trap $2

snippet remove-suffix
  ${${1:#:var}%.*}

snippet default-if-null
  ${${1:#:var}:-${2:#:default}}

snippet default-if-not-null
  ${${1:#:var}:+${2:#:default}}

snippet output-if-null
  ${${1:#:var}:?${2:#:default}}

snippet assing-if0null
  ${${1:#:var}:=${2:#:value}}

snippet if-test
  if test ${1}; then
    ${0}
  fi

snippet if-defined
  if ${${1:#:var}+:} false; then
    ${0}
  fi

snippet if-not-defined
  if ! ${${1:#:var}+:} false; then
    ${0}
  fi

snippet if-executable
  [ "`which` ${1:#:command}" != '' -a \\$? -eq 0 ]; then
    ${0}
  fi

snippet if-not-executable
  [ "`which` ${1:#:command}" = '' -o \\$? -ne 0 ]; then
    ${0}
  fi

snippet while-index
  ${1:i}=${2:0}
  while [ "$$1" -lt ${3:#:nLoop} ]; do
    ${0}
    $1=\`expr "$$1" + 1\`
  done

snippet posix-array
  ${1:#:var}="\
  ${0}
  "
  ${2:$1_list}=\`echo \$$1 | cut -f 1- -d ' '\`

snippet bash-if
  if [[ ${1} ]]; then
    ${0}
  fi

snippet bash-for
  declare -i ${1:i}
  for (($1 = ${2:0}; $1 < ${3}; $1++)) {
    ${0}
  }

snippet getopt
  unset GETOPT_COMPATIBLE
  local ${1:opt}=\`getopt -o ${2:#:short-options} -l ${3:#:long-options} -- "\$@"\`
  eval set -- "\$$1"
  while [ \$# -gt 0 ]; do
    case \$1 in
      ${4:#:match-option})
        ${0}
        ;;
      --)
        shift
        break
        ;;
    esac
    shift
  done

snippet identify-os
  case ${OSTYPE} in
    cygwin | msys)
      ${0}
      ;;
    darwin*)
      ;;
    linux*)
      ;;
  esac
